Check all statements that are correct.	A function can be both increasing and decreasing.

Strictly increasing functions are increasing.

Increasing functions do not have to be strictly increasing.

It is not possible to have an onto function from a set to its own power set.

Every function can be forced to become trivially injective by restricting its domain to a single element.

The range of a function is always a subset of its codomain.

A bijective function is a function that is both injective and surjective.

Compositions of bijective functions are again bijective.

A function can be both strictly increasing and strictly decreasing.;Judge the following reasoning as true or false.  You are working for a tech company. You came up with an algorithm that performs a needed operation on n inputs in order of n operations. Someone else in the company simultaneously came up with an algorithm that performs the same task in order of log(n) operations. Then it follows necessarily that your algorithm will require more operations to perform this task and is therefore inferior and should not be used.	False;Your job is to write a basic blurring algorithm for a video driver. The algorithm will do the following: it will go through all pixels on the screen and for each pixel, compute the average intensity value (in red, green and blue separately) of the pixel and its 8 neighbors. (At the edges of the screen, there are fewer neighbors for each pixel.) Let's say the number of pixels on the screen is n. Then what is the order of the number of arithmetic operations (additions and divisions) required?	The number is order of n .;Refering again to the blur algorithm described previously, by what factor does the number of operations increase when instead of applying it at full HD resolution (1920 x 1080), we apply it at UHD resolution (3840 x 2160) ?	4;You have a large text file of people. Each person is represented by one line in the text file. The line starts with their ID number and after that, has the person's name. The lines are sorted by ID number in ascending order.   There are n lines in this file. You write a search function that returns the name of a person whose ID number is given. The simplest way to do that would be to program a loop that goes through each line and compares the ID number in the line against the given ID number. If there is a match, then it returns the name in that line.  This is very inefficient, because the worst-case scenario is that this program needs to go through almost everyone- the person we are looking for could be last. Using the fact that the file is sorted will greatly speed up the process, by allowing us to use a binary search algorithm:We go to the middle line of the file first and compare the ID found there (P) to the given ID (Q). (If the number of lines is even, we go above or below the arithmetic middle.)If P=Q then our algorithm terminates - we have found the person we are looking for.If P is less than Q, that means that the person we are looking for is in the second half of the file. We now repeat our algorithm on the second half of the file. If P is greater than Q, that means that the person we are looking for is in the first half of the file. We now repeat our algorithm on the first half of the file. Of what order is the worst-case number of comparison operations that are needed for this algorithm to terminate?	log(n);True or false? ∅ and {∅} are the same set. They are both the empty set.	False;Mark all statements that are correct.	An intersection with the empty set is always empty.

The empty set, and only the empty set, has cardinality zero.

The empty set has no proper subsets.

The cartesian product A × B is empty if A is empty or B is empty.

The empty set is a subset of every set.;Each of the following is an attempted proof of the statement  For each non-zero real number x, there is a real number y so that xy = 1. Only one proof is correct. The others are incorrect, for a variety of reasons. Match each (attempted) proof with the correct analysis of its merits.  Proof 1:  Let x be a nonzero real number. Let y be a real number. Pick y = 1/x, which exists because x is not zero. Then by definition of y, xy = 1.  Proof 2:  Let x be a nonzero real number. Let y = 1/x, which exists because x is not zero. Then by definition of y, xy = 1.  Proof 3:  Let x be a nonzero real number. Let y be a real number such that xy=1. We have shown that for each nonzero x, a y such that xy=1 exists.  Proof 4:  Say x = 2. Then if we pick y = 1/2, we have xy = 1. It works the same way for any non-zero x.  Analysis 1: this is wrong because it is a "proof by example". The proof writer picked an example for the x, and showed how y has to be chosen for that special x. What the attempted proof actually shows is that a real number y exists so that 2y = 1. It does not show that for any nonzero x, a y exists so that xy=1.With the last sentence, the proof writer tried to salvage the situation by appealing to the reader's sense of pattern recognition: it works the same way for all nonzero x! But to explain just how it works "the same way" for any nonzero x was the center of the job the proof writer was supposed to do.  Analysis 2: the proof is correct. After assuming that an arbitrary nonzero x is given, we introduce the proper y as a function of x and then verify that it has the desired property. We're basically demonstrating how we can always win this challenge-response game. Someone challenges us with nonzero x. In response, we pick a y. By picking y to be 1/x, which is always possible because x is not zero, we guarantee xy=1 and thereby win the game.  Analysis 3: this proof is almost correct (but still wrong) because it instantiates y as an arbitrary real number that does not depend on x, and then redefines it. The writer of this proof is perhaps used to writing programs in a language where variables first need to be declared, and then assigned a value. This is inappropriate for an existence proof. By saying "Let y be a real number", we logically did much more than declare that y was going to be a real number- we introduced it as an arbitrary real number. To use the programming analogy, we didn't just declare y to be real, but we declared it to be real and assigned a random value to it. Once we have done that, we are stuck with that random value. It is improper to redefine it later to be a specific value that depends on x.  Analysis 4: this "proof" is wrong because it shows nothing. It simply assumes the conclusion that the required y exists for each x. One could also call this an "attempted proof by affirmative declaration".	Proof 1 --> Analysis 3

Proof 2 --> Analysis 2

Proof 3 --> Analysis 4

Proof 4 --> Analysis 1;Each one of the following is an attempted proof of the statement  For every integer n, there is an odd number k such that n < k < n+3.  Only one of the proofs is correct. Match each proof with a correct analysis of its merits.  Proof 1:  Let the integer n be given. If n is even, let k be n+1. If n is odd, let k be n+2. Either way, k is odd, and n < k < n+3. That proves that for any integer n, an odd k such that n < k < n+3 exists.  Proof 2:  Let n be given. Then k=2n+1 is odd by definition, and greater than n. Since also k < n+3, we have shown the existence of an odd k between n and n+3, for all n.  Proof 3:  Given the integer n, pick k = n + 2. Then n < k < k+3. Thus, for every integer n, an odd k with n < k < n+3 exists.Proof 4:  Let the odd integer k be given. Pick n = k-1. Then n < k < n+3. We have shown that for every integer n, an odd integer k with n < k < n+3 exists.  Analysis 1: The proof starts with the proper assumption but constructs the wrong k. While the k is between n and n+3, it may not be odd. The k chosen is even when n is even.Analysis 2: The proof starts with the proper assumption, but then constructs the wrong k. 2n+1, while odd, is generally not between n and n+3.  Analysis 3: This proof shows that for every odd k, an integer n with n k n+3 exists, which is a different statement than what was supposed to be proved, and not logically equivalent.  Analysis 4: the proof is correct. By starting with the assumption that n is an arbitrary integer, it sets up universal generalization. Then it makes a case distinction, so that no matter whether n is even or odd, k comes out to be odd, and between n and n+3. By universal generalization, that proves that such k exists for all integers n.	Proof 1. --> Analysis 4.

Proof 2 --> Analysis 2

Proof 3. --> Analysis 1.

Proof 4 --> Analysis 3;Check all statements that are true.	All power functions f(x)=xⁿ, where n is a real constant, are O(eˣ).

f(x)=x is Ω ( x ) Ω ( x ) Ω ( x ) Ω ( x ) .

If two functions are O(g), then so is their sum.

f(x) = sin(x) is big-O of 1.

f(x)=5x is of order 3x.

If p is a polynomial of degree n, and q is a polynomial of degree m, and n=m, then p is of order q.

If p is a polynomial of degree n, and q is a polynomial of degree m, and nm, then p is O(q).

If f and g are functions defined for all positive real numbers and if  lim x → ∞ | f ( x ) g ( x ) | = C lim x → ∞ | f ( x ) g ( x ) | = C lim x → ∞ | f ( x ) g ( x ) | = C lim x → ∞ | f ( x ) g ( x ) | = C where C is a positive constant, then f is of order g.

f(x)=x is O(x²).

The triangle inequality says that for all real numbers a and b, |a + b| ≤ |a| + |b|.;Check all true statements.	The cartesian product has a cancellation property, i.e. if A x B = A x C for some sets A, B, C and A nonempty, then B = C.

If A={1,2} and B={3} then A x B ={ (1,3), (2,3) }.

For all nonempty sets A, B, C, D, if A x B = C x D, then A = C and B = D.;Proof writing requires thorough study and most importantly practice. It is unlikely that I will be able to write a perfect proof on my very first attempt. This is why I need to practice proof writing before I get tested on it.	True;Most mistakes I am likely to make are described in the lecture and extended powerpoints on proofs and the handouts "Some Notes on Proof Writing" and "For All There Exists Proof Writing", which I need to study thoroughly.	True;Module 4: Proofs tells me to complete at least a few proof writing assignments from the textbook. To receive feedback from the teacher, I can post my solutions on piazza.	True;Given the conditional If I eat too much, I will gain weight, identify converse, inverse and contrapositive. Don't over-analyze the tenses, we're not modeling the temporal relationship here, only the causal relationship.	Converse --> If I am gaining weight, I am eating too much.

Inverse --> If I don't eat too much, I won't gain weight.

Contrapositive --> If I'm not gaining weight, I'm not eating too much.;Select which one(s) of the following conditionals are equivalent toTo gain financial independence, it is sufficient to win the lottery.	If you didn't gain financial independence, you didn't win the lottery.

If you win the lottery, you will gain financial independence.;Select which one(s) of the following conditionals are equivalent toI get pulled over only if I drive too fast.	If I don't drive too fast, I don't get pulled over.

If I get pulled over, I was driving too fast.;Select which one(s) of the following conditionals are equivalent to Rain is a necessary condition for a rainbow.	If there is a rainbow, then there is rain.

If there is no rain, then there is no rainbow.;Select which one(s) of the following conditionals are equivalent to  You will get sick unless you eat your vegetables.	If you don't eat your vegetables, you will get sick.

If you are not sick, then you are eating your vegetables.;Check all statements that are equivalent to  If the sky is not clear, then you don’t see the stars.	You see the stars only if the sky is clear.

You don’t see the stars unless the sky is clear.

If you see the stars, then the sky is clear.

Clear sky is necessary to see the stars.;Let P be the predicate defined by P(x,y) = "x owns y".Match each English statement with the corresponding formal expression that means the same thing.  The phrase "public property" refers to an object that is owned by everyone.	Jane owns the house. --> P(Jane, house)

Josh doesn't own the cat. --> ¬P(Josh, cat)

(meaningless expression) --> P(Josh, ¬cat)

Everyone owns something. --> ∀x ∃y P(x,y)

Everything is owned by someone. --> ∀y ∃x P(x,y)

Some things don't have an owner. --> ∃y ∀x ¬P(x,y)

Some things are not public property. --> ∃y ∃x ¬P(x,y)

Some people own nothing. --> ∃x ∀y ¬P(x,y)

Some people don't own everything. --> ∃x ∃y ¬P(x,y)

Mr. Burns owns everything. --> ∀y P(Mr. Burns, y)

An object cannot have more than one owner. --> ∀x ∀y ∀z ( P(x,z) ∧ P(y,z) → x=y )

Some people own at most three things. --> ∃x ∃y ∃z ∃w ( P(x,y) ∧ P(x,z) ∧ P(x,w) ∧ ∀q ( P(x,q) → q=w ∨ q=y ∨q=z ) )

Some things have more than one owner. --> ∃y ∃x ∃z ( x ≠ z ∧P(x,y) ∧P(z,y) )

There is an object owned by everyone except one person. --> ∃y ∃x ( ¬P(x,y) ∧ ∀z ( z ≠ x → P(z,y) ) );You may have noticed that in practice problems related to order, logarithms are usually just "log". As you know from algebra, there is more than one logarithm. For each positive number b, there is a base-b logarithm. They are all different- the base-2 logarithm of 8 is 3, while the base 10 logarithm of 8 is 0.90308998699... . There is also a base-e logarithm, called the natural logarithm and usually written as "ln". This begs the question of how it could be justified to just say that a function f(n) is order of "log(n)". Isn't this meaningless if the base of the log is not specified?	Actually, "f is order of log(n)" means the same thing regardless of the base. More precisely, if a and b are two positive real numbers, then f is of order base-a log of n if and only if f is of order base-b log of n. The reason for that lies in the change of base formula, which says that any two log functions are in a constant positive factor relationship with each other. Order relations between two function do not change when you change a constant positive factor in one of the functions.;In this exercise, let P and Q be predicates. Mark all statements that must be true, no matter what P and Q are.	If P(x)∧Q(x) is true for all x, then P(x) is true for all x and Q(x) is true for all x.

If P(x) is true for all x or Q(x) is true for all x, then Px()∨Q(x) is true for all x.

If P(x) is true for all x and Q(x) is true for all x, then P(x)∧Q(x) is true for all x.;In this exercise, let P and Q be predicates. Mark all statements that must be true, no matter what P and Q are.	If P(x)∨Q(x) is true for some x, then P(x) is true for some x, or Q(x) is true for some x.

If P(x)∧Q(x) is true for some x, then P(x) is true for some x and Q(x) is true for some x.

If P(x) is true for some x or Q(x) is true for some x, then P(x)∨Q(x) is true for some x.;Mark all true statements.	If everyone owns a dog, or everyone owns a cat, then it must be true that everyone owns a dog or a cat.

If everyone owns a dog and a cat, then everyone owns a dog and everyone owns a cat.

If everyone owns a dog and everyone owns a cat, then it must be true that everyone owns a dog and a cat.;Mark all true statements.	If some people own a dog and a cat, then some people own a dog and some people own a cat.

If some people own a dog, or some people own a cat, then it must be true that some people own a dog or a cat.

If some people own a dog or a cat, then some people own a dog, or some people own a cat.;An inductive proof that P(n) is true for all n always starts with the base case. What is the base case?	The base case is always P(n) for the lowest n value for which P(n) is defined.;We always start the inductive step with the assumption that	P(n) is true for some n.;In the inductive step, we show that	if P(n) is true, then P(n+1) is true.;True or false?  The conclusion of the inductive step, P(n+1), is shown by substituting n+1 for the n in the statement P(n).	False;True or false? In the context of our theory of inductive proofs, P(n) represents the quantity about which we are proving something.	False;True or false? We always prove the statement P(n+1) by taking the statement P(n) and adding n+1 to both sides.	False;True or false? If P(n) is a summation formula involving a sigma sum, we always prove the statement P(n+1) by taking the statement P(n) and adding n+1 to both sides.	False;True or false? If P(n) is a summation formula for the sigma sum    ,  where S(n) represents the sum in closed form, we prove the statement P(n+1) from P(n) by taking the statement P(n) and adding f(n+1) to both sides. Then we simplify S(n)+f(n+1) algebraically to show that it is S(n+1).	True;True or false? If   ,  then  .	True;True or false? In the inductive step, we justify the assumption P(n) by referring to the base case. (Example: "Since P(0) is true, we can now assume that P(n) is true for some n...")	False;True or false? If a is a positive real number, and x and y are real numbers, then   aˣ⁺ʸ = aˣ + aʸ.	False;True or false? If a is a positive number and x and y are real numbers, then  .	True;True or false? If x is a real number, then 2·3ˣ = 6ˣ.	False;Match the binary logical operators to their truth tables.        Table A  Table B  Table C  Table D              p  q  ???      T  T  T      T  F  F      F  T  T      F  F    T                    p  q  ???      T  T  T      T  F  T      F  T  F      F  F    T                    p  q  ???      T  T  F      T  F  T      F  T  T      F  F    T                    p  q  ???      T  T  T      T  F  T      F  T  T      F  F    F	p → q --> A

q → p --> B

p → ¬q --> C

¬p → q --> D;Match the binary logical operators to their truth tables.        Table A  Table B  Table C  Table D              p  q  ???      T  T  T      T  F  F      F  T  F      F  F    F                    p  q  ???      T  T  F      T  F  T      F  T  F      F  F    F                    p  q  ???      T  T  F      T  F  F      F  T  T      F  F    F                    p  q  ???      T  T  F      T  F  F      F  T  F      F  F    T	p∧q --> A

p∧¬q --> B

¬p∧q --> C

¬p∧¬q --> D;Match the binary logical operators to their truth tables.        Table A  Table B  Table C  Table D              p  q  ???      T  T  T      T  F  T      F  T  T      F  F    F                    p  q  ???      T  T  T      T  F  T      F  T  F      F  F    T                    p  q  ???      T  T  T      T  F  F      F  T  T      F  F    T                    p  q  ???      T  T  F      T  F  T      F  T  T      F  F    T	p∨q --> A

p∨¬q --> B

¬p∨q --> C

¬p∨¬q --> D;A mathematician tells her son, "I will give you $100 only if you pass the class." Being a mathematician, she means exactly what she said.Check all true statements about this situation.	If he passes the class, she may pay him $100.

Her statement defined passing the class as a necessary condition for receiving the $100.

If she ended up paying him $100, he must have passed the class.

If he doesn't pass the class, she will definitely not pay him $100.

He will not get the $100 unless he passes the class.;Check all true statements.	Among all base-b representations of a positive integer n, the binary one is always at least as long as any other (in terms of number of digits.)

The security of Diffie-Hellmann Key Exchange is based on the difficulty of computing discrete logarithms.

You can convert a number from binary to octal by grouping the digits ("bits") of the binary number into groups of 3, going from right to left. If the number of bits is not a multiple of 3, you may have to add one or two leading 0 bits on the left side. Then you convert each group of 3 bits into one octal digit.

You can convert a number from hexadecimal to binary by replacing each hexadecimal digit separately by its corresponding 4-bit binary representation.

In octal (base-8), every digit is 0,1,2,3,4,5,6 or 7.

Given an integer n and a base b, we can find the last digit of the base-b expansion of n by performing the division algorithm to find n = qb + r. The remainder r is the last digit. By repeating the process with q instead of n, we find the next digit, and so on.

Expressed in base-n, the integer n is "10".

The fast modular exponentiation algorithm takes advantage of the binary representation of the exponent.

In base-b, it is easy to see whether an integer is a multiple of b. Its last digit is zero in that case.

In ternary (base-3), every digit is a 0,1 or 2.

In duodecimal (base-12), every digit is 0,1,2,3,4,5,6,7,8,9,A or B.

Expressed in base-n, the integer n^2 is "100".

The fast modular exponentiation algorithm computes bⁱ mod m in only about log₂(i) steps. This enables it to be applied to extremely large n.;What is the correct negation of "There is someone in Spain who speaks at least 10 languages." ?	"Everyone in Spain speaks at most 9 languages.";True or false? The interval [1,2] contains exactly two numbers - the numbers 1 and 2.	False;The interval (2,5) is the same as the interval [3,4].	False;True or false? [1,5] = { 1, 2, 3, 4, 5 }.	False;What is wrong with this argument? Check all that apply.  Suppose x = 2  2x = 4  2x + 1 = 5	Punctuation is missing. Each sentence needs to be terminated with a period (.).

The logical "glue" is missing. Lines 2 is a consequence of line 1, and line 3 is a consequence of line 2. Words and phrases like "Thus", "Therefore", "It follows", etc. need to be used to make it clear that we are drawing conclusions.;What is wrong with this proof that integer solutions of n + 1 - k = 0 exist?  Suppose n = 7 and k = 8. Since k = n+1. Proving that n + 1 - k = 0.	We cannot use the -ing form for the main verb in a main clause.

"SInce" introduces a subordinate clause, not a main clause. The subordinate clauses describes the reason for what follows in the main clause. "Since k =n+1, we have n + 1 - k = 0." would have been an acceptable phrase.

The word 'proving' suggests that what comes after that is supposed to be a concluding statement reiterating the theorem that has been proved.  However, n + 1 - k = 0 is not the theorem. it's not even a proposition, because k and n are undefined variables in that statement. What are n and k? Do they have values? Is this supposed to be true for all n and k? Or is merely the existence of integers n,k being asserted that make the equation true? Without that information, the equation is not a meaningful statement. A correct final conclusion would have been:  "This proves that n + 1 - k = 0 has integer solutions n,k.";What's wrong with this proof that an even number plus an even number is even?  Suppose n and m are even numbers. Then n is 2k and m is 2k as well. It follows that their sum is 2k plus 2k. By using the laws of algebra, we can show that 2k plus 2k is 4k, or 2 times 2k. Hence, n plus m is even by definition of even number.	The proof is much too verbose. A good proof is concise. We don't usually spell out standard operators in English: we usually write + instead of "plus". We also don't spell out obvious things like the fact that we are using the laws of algebra when we're doing algebra.

There is a meaningless "can" statement we can show. In proofs, you don't declare that you can show. You have to do the showing.

Variable name literalism: while an even number can always be written as 2k for some integer k, two potentially different even numbers will not be equal to 2k for the same k. A correct proof must use two different variable names like this: Then n = 2p and m = 2q for some integers p, q.

The quantification "for some integer k" is missing from "n = 2k". Without the quantification, the statement "n = 2k" is meaningless because k is an undefined variable.;True or false? The following is a valid proof of the theorem that for every integer n, there is an integer k such that n < k < n+2.  Assume n is an integer. Let k be an integer such that n < k < n+2. This shows that for every n, an integer k such that n < k < n+2 exists.	False;What is wrong with the following proof that for every integer n, there is an integer k such that n < k < n+2?  Suppose n is an arbitrary integer. Then k exists such that k = n + 1, proving n < n+1 < n+2.	"Then k exists such that k = n + 1" is abuse of existential language. Given the n, the existence of the number n+1 is not in question.

We do not use the phrase "exists.. such that" to make a direct definition. To define k as n+1, we say "let k = n + 1", "pick k = n + 1" or "select k = n + 1". It works the same way as for constants. To assign the value 3 to k, we say "let k = 3". We do not say "k exists such that k = 3".

It makes no sense to draw a conclusion from the definition of k that does not reference k. The inequality n n+1 n+2 is true for all n, prior to any choice for k.;What is wrong with the following proof that for every integer n, there is an integer k such that n < k < n+2?  Suppose n is an arbitrary integer. Therefore k = n + 1.	The proof writer mentally assumed the conclusion. She wrote "suppose n is an arbitrary integer", but was really thinking "suppose n is an arbitrary integer, and suppose that for this n, there exists an integer k that satisfies n k n+2." Under those assumptions, it follows indeed that k must be n + 1, which justifies the word "therefore". but of course assuming the conclusion destroyed the validity of the proof.

The "therefore" phrase is illogical. The fact that n is an integer does not force us to define k as n + 1.

Since the theorem required the condition that k satisfies n k n +2, a complete proof should at least mention that the chosen k satisfies that inequality, even if there is nothing to prove algebraically.;Consider the following proposed proof by contradiction that for all positive integers n, 3n > 2.  Proof by Contradiction: Suppose that the statement is false, i.e. for all positive integers n, 3n < 2. Pick n = 1. Then 3n = 3, but that contradicts 3n < 2. Thus the statement is true.  Select all correct responses.	The proof is basically attempted proof by example, dressed up as a proof by contradiction to hide the obvious invalidity of the argument 3n > 2 is true for n = 1, and therefore must be true for all n.

The negation of a universal quantification is the existential, not the universal, quantification of the negation, and the negation of an exclusive inequality is inclusive. The proper negation is that there exists an integer n for which 3n ≤ 2.

The statement is best and very easily proved directly: by definition, if n is a positive integer, then n ≥ 1. Thus 3n ≥ 3 > 2.;Consider the following proposed proof by contradiction that for all positive integers n, 3n > 2.  Proof by Contradiction: Suppose that the statement is false.   Since n is a positive integer, n ≥ 1. That means 3n ≥ 3  > 2. Thus the statement is true. The fact that the statement is true contradicts the assumption that the statement is false. Thus, the assumption that the statement was false must have been false. Thus, the statement is true.  Select all correct responses.	The proof is not technically incorrect, but it is nevertheless an example of extremely bad proof writing.

This is what the lecture calls a "fake proof by contradiction".

The proof contains a simple direct proof, wrapped inside the unnecessary logical packaging of a proof by contradiction framework.;True or False? If x is a real number, then 2·3ˣ = 6ˣ.	False;If x is a real number, then 3ˣ + 5ˣ	cannot be simplified.;If x is a real number, then 3ˣ · 5ˣ	= 15ˣ;If x is a positive real number, then log(xˣ) =	x · log(x);Check all functions that are polynomials.	1

x

5x³ + 2x² +  x + 1;True or False? Given a positive integer n and a polynomial f(x) = aₙxⁿ + aₙ₋₁xⁿ⁻¹ + ... + a₁x + a₀ with aₙ ≠ 0, the end behavior rule says that..    f rises on the right and on the left (i.e. goes to infinity as x goes to plus or minus infinity ) if aₙ > 0 and n even.  f falls on the right and on the left (i.e. goes to minus infinity as x goes to plus or minus infinity) if aₙ < 0 and n even.  f rises on the right and falls on the left (i.e. goes to infinity as x goes to infinity, and goes to minus infinity as x goes to minus infinity) if aₙ > 0 and n odd.  f rises on the left and falls on the right (i.e. goes to infinity as x goes to minus infinity, and goes to infinity as x goes to minus infinity) if aₙ < 0 and n odd.	True;True or False? The first step in solving a quadratic equation is to move the constant term to the right side. Then we factor x out of the left side.  For example, we start to solve x² + 3x + 2 = 0 by rewriting it as  x² + 3x = -2.  Then we factor the left side:  x(x + 3) = -2.	False;Check all approaches that may be used to factor a cubic.	Grouping. We factor x² out of the cubic and quadratic term. This may (but does not have to) produce x² times a linear term that is equal to the linear term of the cubic, or a constant multiple of it. For example, x³ + 5x² + x + 5 = x²(x+5) + x+5 = (x²+1)(x+5). x³ + 5x² + 7x + 35 = x²(x+5) + 7(x+5) = (x²+7)(x+5). This method only works in exceptional cases.

If the constant term of the cubic is zero, we factor out x and then factor the remaining quadratic. For example, x³ + 7x² + 6x  = 0 is equivalent to x(x² + 7x + 6) = 0, which is equivalent to x(x+1)(x+6) = 0. This means that the three solutions are x=0, x=-1 and x=-6.

We use the rational zero test to determine a list of possible rational (including integer) solutions. We make a table of values and hopefully find a rational zero (if we don't find a rational zero, this method does not work.) Assuming that c is a rational zero of the cubic function f(x), we can now factor f(x) = (x-c) · q(x), where q(x) is a quadratic. We can carry out this factorization using synthetic or long division. Then we factor the quadratic. For example, the rational zero test says that ifx³ + x - 2 has any rational zeros, they must be contained in the list ±1, ±2. By substituting these values, we find that x= 1 is a zero. Thus, x³ + x - 2 = (x-1)·q(x), where q(x) is a quadratic. Carrying out synthetic division, we find thatx³ + x - 2 = (x-1)·(x² + x + 2). We can not find the remaining zeros by applying the quadratic formula to the quadratic.;Mark all true statements.	The number n can have at most the floor of base-2 log of n many prime factors, if prime factors are counted with repetition (i.e. 2*3*3*5 has 4 prime factors.)

The gcd of two distinct primes is 1.

The sequence of prime numbers follows no exact pattern.

The number of prime numbers between 1 and 100 is greater than the number of prime numbers between 1000 and 1100.

If a,b,q and r are integers and a= bq + r, then gcd(a,b) = gcd(b,r).

To test whether 101 is prime, you only need to divide it by 2,3,5 and 7. If it is not divisible by any of those numbers, then it is prime.

If p is prime, then p+2 may or may not be prime, i.e. there exist primes p such that p+2 is prime, and there exist primes p such that p+2 is not prime.

The lcm of two distinct primes is their product.

Given the prime factorizations of positive integers a and b, we can easily find the gcd and the lcm of a and b.

If p,q and r are distinct primes, then lcm(pq, qr) = prq.

If p and q are distinct primes, then they are also relatively prime to each other.

If there are only finitely many primes, then 1=2.

If p,q and r are distinct primes, then gcd(pq, qr) = q.;Check all statements that are true.	When you perform division by 3 with remainder, the remainder is one of the integers 0,1,2.

Saying that a divides b is the same as saying that b is a multiple of a.

If an integer divides two numbers, it also divides their difference.

If an integer a divides an integer b, then a also divides any multiple of b.

If a and b are positive integers, and a = bq + r is the decomposition of a given by the division algorithm, then q can be found as the floor of a/b, and then r can be found as r = a - bq.

If an integer divides two numbers, it also divides their sum.

Adding two integers and then taking the remainder produces the same result as taking their remainders first, then adding them, and then applying the remainder operation once more.;Mark the true statements.	The set { {} } is not empty.

The power set of the empty set is { ∅ }.

{{1,2}} is a subset of the power set of {1,2,3}.

The power set of the power set of the empty set is { ∅, { ∅ } }.

{1,2} is an element of the power set of {1,2,3}.;Consider the following argument:  If it rains, then the streets are wet. The streets are not wet. Therefore, it is not raining.  It the argument is valid, select the valid argument form. If it is not valid, then select "fallacy".	Modus Tollens.;Consider the following argument:  If it rains, then the streets are wet. It is not raining. Therefore, the streets are not wet.  It the argument is valid, select the valid argument form. If it is not valid, then select "fallacy".	Fallacy;Consider the following argument:  If it rains, then the streets are wet. The streets are wet. Therefore, it is raining.  It the argument is valid, select the valid argument form. If it is not valid, then select "fallacy".	Fallacy;Consider the following argument:  If it rains, then the streets are wet. It is raining. Therefore, the streets are wet.  It the argument is valid, select the valid argument form. If it is not valid, then select "fallacy".	Modus Ponens;Each set operator corresponds to a logical operator, in the following sense:  for each binary set operator □, there is a binary logical operator ○ such that for any universal set U, and any subsets A and B of U,   A □ B = { x ∈ U | x ∈ A ○ x ∈ B }. Match set operators and their corresponding logical operators.	difference --> and not

union --> or

intersection --> and

symmetric difference --> exclusive or;All the binary set operators we learned in the class are symmetric, except one. Identify the set operator that is not symmetric.  (a binary set operator □ is called symmetric if A □ B = B □ A for all universal sets U, and all subsets A,B of U.)	difference;It is possible to define a binary set operator that corresponds to the conditional:A ↦ B = { x ∈ U | x ∈ A → x ∈ B }.Select the Venn diagram that visualizes A ↦ B . In the diagrams below, A is the set on the left, B is the set on the right. The color red represents being part of the set A ↦ B, the color white represents not being part of the set A ↦ B.	lower right;It is possible to define a binary set operator that corresponds to the biconditional:  A ⟷ B = { x ∈ U | x ∈ A ⟷ x ∈ B }.Select the Venn diagram that visualizes A ⟷ B. In the diagrams below, A is the set on the left, B is the set on the right. The color red represents being part of the set A ⟷ B, the color white represents not being part of the set A ⟷ B .	lower left;Several students were asked to formalize the following argument by defining appropriate predicates and then giving the argument as a numbered listed of statements. Each statement was to be labeled either as a premise, or a conclusion from earlier statements, and the argument form used identified.  Vegetarians don't eat meat. Bill is a vegetarian. Pork is a kind of meat. Therefore, Bill does not eat pork.  Identify the correct answer.	Ananya: define the predicates V(x) = "x is a vegetarian." M(y) = "y is meat."E(x,y) = "x eats y."The variable x represents people, the variable y represents foods. 1. ∀x,y (V(x) ∧ M(y)→ ¬E(x,y) )  (premise)2. V(Bill) (premise)3. M(Pork) (premise)4. V(Bill) ∧ M(Pork) (conjunction from 2. and 3.)5. V(Bill) ∧ M(Pork)→ ¬E(Bill,Pork) (universal instantiation of 1.)6. ¬E(Bill,Pork) (modus ponens from 4. and 5.);Proof: let  Base case: P(1) = 1/2.   Inductive step: suppose P(n) has already been proven for some arbitrary n. The statement P(n+1) is  This concludes the proof by induction.	The proof abuses the notation P(n) to refer to both the common value of the two sides of the equation to be proved and the statement that the two sides are indeed equal as the notation was introduced in the lecture. Furthermore, it does not make sense to define P(n) as the common value of the two sides, because it assumes the conclusion, that the two sides are equal. At the very least, the definition of P(n) in the first line should have used parentheses: P ( n ) = ( ∑ k = 1 n 1 k ( k + 1 ) = 1 − 1 n + 1 ) . P ( n ) = ( ∑ k = 1 n 1 k ( k + 1 ) = 1 − 1 n + 1 ) . P ( n ) = ( ∑ k = 1 n 1 k ( k + 1 ) = 1 − 1 n + 1 ) . P ( n ) = ( ∑ k = 1 n 1 k ( k + 1 ) = 1 − 1 n + 1 ) . Related to that, P(1) is not the quantity 1/2. It's the statement (1/2 = 1/2).The best option is to not use the abstraction of "P(n)" in actual inductive proofs at all but refer verbally to the statement to be proved. The notation P(n) is best reserved for discussing the logic of inductive proofs in the abstract.

The proof writer confused stating P(n+1) with showing that it must be true, given P(n) is true.;Proof: Suppose P(n) is defined by   for all n.Base case: P(0) is true because both sides evaluate to 0.  Inductive step: suppose P(n) has already been proven for some n=k. We wish to prove P(k+1), which is   By taking the statement  P(k) and adding k+1 to both sides, we get    This concludes the proof by induction.	The base case is n=1 not n=0.

The proof writer blindly imitates example 1 of the lecture on induction, in which the statement P(n+1) is obtained from P(n) by adding n+1 to both sides.  In lecture example 1, n+1 was the next term in the summation, but different summations come with different next terms: In the sum  ∑ k = 1 n k ∑ k = 1 n k ∑ k = 1 n k , the next term (i.e. the new term that gets added when we change the upper limit from n to n+1) is indeed n+1.  In the sum ∑ k = 1 n 1 k ( k + 1 ) ∑ k = 1 n 1 k ( k + 1 ) ∑ k = 1 n 1 k ( k + 1 ) , the "next" term is 1 ( n + 1 ) ( n + 2 ) . 1 ( n + 1 ) ( n + 2 ) . 1 ( n + 1 ) ( n + 2 ) .

The proof writer exercises wishful thinking or consciously bluffs by claiming without showing any algebraic detail that  1 − 1 k + 1 + k + 1 = 1 − 1 k + 2 . 1 − 1 k + 1 + k + 1 = 1 − 1 k + 2 . 1 − 1 k + 1 + k + 1 = 1 − 1 k + 2 . The proof writer wants this to be true, but can't show it because it isn't true.

The proof writer abuses the variable k to simultaneously play the role of the running variable in the sigma sum, and the upper limit of the running variable. This creates a circular reference (k goes from 1 to k) which renders all the sigma sums in the proof meaningless.;Proof: Suppose P(n) is defined by   for all n. Base case: P(1) is true because both sides evaluate to 1/2.  Inductive step: since we have proved P(1), we know that P(n) is true for some n:    By adding the quantity 1/((n+1)(n+2)) to both sides, we get    Thus, P(n+1) is true.	The inductive step is logically flawed because it is tied to the base case. Rather than simply assuming that the statement P(n) has already been shown for some (arbitrary) n, the inductive step attempts to justify this assumption by referring to P(1). In doing so, this proof writer is trying to re-explain/re-prove the global logic of induction inside the inductive step, which must only be concerned about why the truth of any P(n) implies the truth of the next one. The proof writer correctly and in full generality shows that P(n) implies P(n+1), but since the inductive hypothesis effectively only assumed P(1), the inductive step really only shows P(2). The inductive chain reaction dies, after one step. The inductive chain reaction can only propagate through all n if it is permitted to go from any n to the next.;Proof:   Base case: The summation formula holds for n=1 because both sides evaluate to 1/2.  Inductive step: Suppose we already know for some arbitrary positive integer n that     By adding the quantity 1/((n+1)(n+2)) to both sides, we get    Thus, the summation formula holds for the case n+1.	This is the best of all the proofs in this quiz because it is not only correct, but also succinct and readable. It does not burden the reader with the unnecessary notational abstraction of a "P(n)".;